% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/microbiome_tools.R
\name{make_distance_df}
\alias{make_distance_df}
\title{Creates a data.frame of pairwise distances from a \code{phyloseq} object.}
\usage{
make_distance_df(ps = ps, distances = c("wuf", "uuf", "bray", "jsd",
  "jaccard"), force_distance_calculations = FALSE, intragroup_only = FALSE,
  variables = NULL)
}
\arguments{
\item{ps}{A \code{phyloseq} object that contains \code{\link[phyloseq]{sample_data}}.}

\item{distances}{A vector of distances metrics you want included.
Defaults to c("wuf", "uuf", "bray", "jsd", "jaccard").
If the distance matrix is alrady present in the global enviroment,
it will not calculate it again unless \code{force_distance_calculations} = TRUE.
It will also check to make sure the sample_names(ps) are found in the exsiting
distance matrix.}

\item{force_distance_calculations}{(Logical)
Would you like the function to overwrite any distance matrices in the global enviroment?
Defaults to FALSE}

\item{intragroup_only}{(Logical)
If you would like to restrict comparisions to within a group,
you can set this as TRUE (defaults to "Subject_ID") or you
can specify which column in \code{\link[phyloseq]{sample_variables}}.}

\item{variables}{A vector of \code{\link[phyloseq]{sample_variables}}
that you would like compared in the output data.frame.
For each factor, it will make a column for each sample, as well as a
comparision column. For numerics, the comparison will be the absolute
value of the difference of the numeric. For factors, the comparison
will be if the two samples are the same or not.}
}
\value{
This function returns a data.frame with every pair of samples and their
distance by several distance metrics. It can also output variables, as well as
comparisions between those variables for easy subsetting.
}
\description{
This function outputs a data.frame of pairwise distances from
each pair of samples contained in a \code{phyloseq} object.
}
\examples{

df <- make_distance_df(ps = ps)
df <- make_distance_df(ps = ps,
                       distances = c("jsd", "jaccard"),
                       intragroup_only = "Subject_ID",
                       variables = c("Country", "Age_Months"))
}
